{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","handleSummit","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Person","person","handleDelete","name","number","onClick","Persons","personsToShow","map","id","Filter","filter","handleFilterChange","baseURL","axios","get","then","res","data","newObject","post","delete","put","Notification","message","color","className","style","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","messageColor","setMessageColor","useEffect","personService","initialPersons","displayNotification","setTimeout","p","toLocaleLowerCase","includes","e","target","preventDefault","find","window","confirm","personChanged","returnedPerson","catch","error","concat","console","log","response","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f7f0315.chunk.js","sourcesContent":["const PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleSummit}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange}/>\n      </div>\n      <div>\n        number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","const Person = ({ person, handleDelete }) => (\n  <li>\n    {person.name} {person.number} \n    <button onClick={handleDelete}>delete</button>\n  </li>\n)\n\nconst Persons = ({ personsToShow, handleDelete }) => {\n  return (\n    <div>\n      {personsToShow.map(person => (\n        <Person key={person.id} person={person} handleDelete={() => handleDelete(person)}/>\n      ))}\n    </div>\n  )\n}\n\nexport default Persons\n","const Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nexport default Filter\n","import axios from 'axios'\nconst baseURL = 'api/persons'\n\nconst getAll = () => {\n  const req = axios.get(baseURL)\n  return req.then(res => res.data)\n}\n\nconst create = (newObject) => {\n  const req = axios.post(baseURL, newObject)\n  return req.then(res => res.data)\n}\n\nconst del = (id) => {\n  const req = axios.delete(`${baseURL}/${id}`)\n  return req.then(res => res.data)\n}\n\nconst update = (newObject) => {\n  const req = axios.put(`${baseURL}/${newObject.id}`, newObject)\n  return req.then(res => res.data)\n}\n\nexport default {getAll, create, del, update}\n","const Notification = ({ message, color }) => {\n  if (message === null) return null\n\n  return (\n    <div className=\"notification\" style={{color}}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ messageColor, setMessageColor ] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const displayNotification = (message, color) => {\n    setMessage(message)\n    setMessageColor(color)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = (e) => {\n    e.preventDefault()\n    \n    if (!persons.find(person => person.name === newName)) {\n      \n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          persons = persons.concat(returnedPerson)\n          displayNotification(`Added ${returnedPerson.name}`, 'green')\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          displayNotification(error.response.data.error, 'red')\n        })\n\n    } else {\n      const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if (result) {\n        const person = persons.find(p => p.name === newName)\n        const personChanged = {...person, number: newNumber}\n        personService\n          .update(personChanged)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== returnedPerson.id ? p : returnedPerson))\n          })\n          .catch(error => {\n            setPersons(persons.filter(p => p.id !== personChanged.id ))\n            displayNotification(`Information of ${newName} has already been removed from the server`, 'red')\n          })\n      }\n    }\n  }\n\n  const deletePerson = (person) => {\n    const result = window.confirm(`Delete ${person.name} ?`)\n    if (result) {\n      personService\n        .del(person.id)\n        .then(returnedPerson => {\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n    }\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n\n  }\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value)\n  }\n\n\n  const personsToShow = persons.filter(p => p.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()))\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} color={messageColor} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleSummit={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons personsToShow={personsToShow} handleDelete={person => deletePerson(person)} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}